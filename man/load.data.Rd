% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load.data.R
\name{load.data}
\alias{load.data}
\title{Loading data of various formats}
\usage{
load.data(
  xptFiles,
  xlsFiles,
  csvFiles,
  tabFiles,
  dir = "../project input/client data/data",
  xlsNames,
  xptNames,
  csvNames,
  tabNames,
  perl = "C:/Perl64/bin/perl.exe",
  xlsSheets,
  doScan = TRUE,
  target.env = parent.frame()
)
}
\arguments{
\item{xptFiles}{vector of SAS transport (XPT) filenames}

\item{xlsFiles}{vector of Microsoft Excel (XLS, XLSX) filenames}

\item{csvFiles}{vector of comma-delimited (CSV) filenames}

\item{tabFiles}{vector of tab-delimited (ASCII) filenames}

\item{dir}{directory where the files reside}

\item{xlsNames}{vector of object names for each Microsoft Excel (XLS, XLSX) file, in the same order.}

\item{xptNames}{vector of object names for each SAS transport (XPT) file, in the same order.}

\item{csvNames}{vector of object names for each comma-delimited (CSV) file, in the same order}

\item{tabNames}{vector of object names for each tab-delimited (ASCII) file, in the same order}

\item{perl}{directory where the perl executable resides}

\item{xlsSheets}{a numeric vector of \code{length(xlsFiles)} defining which sheet in the workbook needs to be read. If you do not specify this, by default the first sheet of each workbook will be read.}

\item{doScan}{logical}

\item{target.env}{environment The environment into which the data files will be loaded
and attached.}
}
\value{
Placeholder for return description
}
\description{
Read data for an analysis from a variety of external typical file types, and assign them
}
\examples{
\dontrun{
load.data(xlsFiles="ExampleInput.xlsx",
xlsNames="XLinput1", 
xlsSheets=1, doScan=FALSE)
head(XLinput1)
head(iXLinput1)
load.data(xlsFiles="ExampleInput.xlsx",
          xlsNames="XLinput2", 
          xlsSheets=2,            # NOTE We can specify which worksheet (tab) of the Excel file
          doScan=FALSE)
head(iXLinput2)
load.data(csvFiles=c("ExampleInput2.csv","ExampleInput3.csv"),
          csvNames=c("CSVinput1", "CSVinput2"),
          doScan=FALSE)
head(CSVinput1)
load.data() # loading JUST doing automatic search for files ("scan")
}
}
