% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nm.unzip.r
\name{nm.unzip}
\alias{nm.unzip}
\title{Unzip function for zipped PsN output}
\usage{
nm.unzip(
  run,
  extension = ".xml",
  filename = paste(run, extension, sep = ""),
  path = file.path(getOption("nmDir"), run),
  tmpdir = tempfile("subdir"),
  temp = FALSE,
  outdir = ifelse(temp, tmpdir, path),
  zip.filename = file.path(path, filename),
  zip.call = getOption("unzip.call"),
  command = paste0(sprintf(zip.call, zip.filename), " -o", outdir),
  target = file.path(outdir, filename),
  quiet = TRUE,
  ...
)
}
\arguments{
\item{run}{run rootname (e.g. \code{run1})}

\item{extension}{file extension of the file to unzip. Could be ".xml", or ".cov", or ".cor" or anything else that has been zipped}

\item{filename}{file name (excluding path) of the filename to extract. Is automatically populated with qP workflow defaults}

\item{path}{directory where \code{run} resides}

\item{tmpdir}{directory to use if temp is true}

\item{temp}{if true, unzip to a unique temporary file path}

\item{outdir}{location for unzipped file}

\item{zip.filename}{filename of the zip file to extract. Is automatically populated with qP workflow defaults}

\item{zip.call}{full OS call to zip utility for unzipping. Defaults to "c:/progra~1/7-zip/7z e \%s.7z" on windows. Option "-o" is currently appended by nm.unzip().}

\item{command}{zip.call with filename substituted; passes to system}

\item{target}{path for expected result; possibly identical to zip.filename}

\item{quiet}{whether to suppress process messages}

\item{...}{ignored arguments}
}
\value{
(invisible) path to the unzipped file: especially useful if temp is true.
}
\description{
Many large files like XML output and covariance matrices are zipped by (qPharmetra's
 tweaked version of) PsN. To enable the parsing function of the \code{nm.xxx} domain to
 operate well this function unzips these files.  The unzip call is pulled from the system environment
 variable UNZIP_CALL on startup, or defaulted as stated below.  the \%s in the call is replaced with the
 basename (no extension) of the file to unzip.  The unzip call can be modified by changing the
 option unzip.call.
 
 In fact, you need only specify target and command, i.e. what you expect and how
 you expect to get it. Paths are relative to the current directory.
}
\examples{
file.exists( file.path(getOption("qpExampleDir"),"example1"))
file.exists( file.path(getOption("qpExampleDir"),"example1/example1.cov"))
nm.unzip(run = "example1", extension = ".cov",
path = file.path(getOption("qpExampleDir"),"example1"),quiet = FALSE)
file.exists( file.path(getOption("qpExampleDir"),"example1/example1.cov"))
file.remove( file.path(getOption("qpExampleDir"),"example1/example1.cov"))
file.exists('c:/progra~1/7-zip/7z.exe')
# If the above does not exist, consider:
# options(unzip.call = 'C:/my-zip-path/7z e \%s.7z') # or similar
tmp <- nm.unzip(
  run = "example1", 
  extension = ".cov",
  path = file.path(
    getOption("qpExampleDir"),
    "example1"
  ),
 temp = TRUE
)
file.exists( file.path(getOption("qpExampleDir"),"example1/example1.cov"))
file.exists(tmp)
}
